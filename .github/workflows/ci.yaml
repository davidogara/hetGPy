name: Wheels

on:
  push:
    tags:
      - "*"
jobs:

  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Optional, use if you use setuptools_scm
          submodules: true # Optional, use if you have submodules
  
      - name: Build SDist
        run: pipx run build --sdist
  
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  build:
    name: Wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env: 
      CIBW_BUILD: cp310-* cp311-* cp312-* cp13-*
      CIBW_ARCHS: auto64
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-14, windows-latest] # macos-13, macos-13
  
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      - uses: pypa/cibuildwheel@v2.21
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}
          path: wheelhouse/*.whl
  publish-to-pypi:
    name: >-
      Publish Python 🐍 distribution 📦 to PyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
    - build
    runs-on: ubuntu-22.04
    environment:
      name: pypi
      url: https://pypi.org/p/hetgpy  # Replace <package-name> with your PyPI project name
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
      attestations: write
      contents: read

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        pattern: cibw-*
        path: dist
        merge-multiple: true
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with: 
        skip-existing: true

  github-release:
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes  
    needs:
    - build
    runs-on: ubuntu-22.04

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore
      attestations: write

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        pattern: cibw-*
        path: dist
        merge-multiple: true
    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    - run: python -V
    - name: Sign with sigstore
      uses: sigstore/gh-action-sigstore-python@v3.0.0
      with:
        inputs: ./dist/*.tar.gz
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        '${{ github.ref_name }}'
        --repo '${{ github.repository }}'
        --notes ""
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'

  publish-to-testpypi:
    name: Publish Python 🐍 distribution 📦 to TestPyPI
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs:
    - build
    runs-on: ubuntu-22.04

    environment:
      name: testpypi
      url: https://test.pypi.org/p/hetgpy

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
      attestations: write
      contents: read

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        pattern: cibw-*
        path: dist
        merge-multiple: true
    - name: Publish distribution 📦 to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
    - name: Download all workflow run artifacts
      uses: actions/download-artifact@v4
